from garage.torch.algos import DQN

class IQN(DQN):
    def __init__(self, 
                 env_spec, 
                 policy, 
                 qf, 
                 replay_buffer, 
                 sampler, 
                 exploration_policy=None, 
                 eval_env=None, 
                 double_q=True, 
                 qf_optimizer=..., 
                 *, 
                 steps_per_epoch=20, 
                 n_train_steps=50, 
                 max_episode_length_eval=None, 
                 deterministic_eval=False, 
                 buffer_batch_size=64,
                 min_buffer_size=..., 
                 num_eval_episodes=10, 
                 discount=0.99, 
                 qf_lr=..., 
                 clip_rewards=None, 
                 clip_gradient=10,
                 target_update_freq=5, 
                 reward_scale=1):

        super().__init__(env_spec, 
                         policy, 
                         qf, 
                         replay_buffer, 
                         sampler, 
                         exploration_policy, 
                         eval_env, 
                         double_q, 
                         qf_optimizer, 
                         steps_per_epoch, 
                         n_train_steps, 
                         max_episode_length_eval, 
                         deterministic_eval, 
                         buffer_batch_size, 
                         min_buffer_size, 
                         num_eval_episodes, 
                         discount, 
                         qf_lr, 
                         clip_rewards, 
                         clip_gradient, 
                         target_update_freq, 
                         reward_scale)